name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front-project
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        cache-dependency-path: './front-project/pnpm-lock.yaml'
    
    - name: Install dependencies
      run: |
        if ! pnpm install --frozen-lockfile; then
          echo "❌ Frozen lockfile failed, regenerating lockfile..."
          pnpm install
        fi
    
    - name: Run tests
      run: pnpm run test:unit
    
    - name: Run linting
      run: pnpm run lint

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./front-project
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        cache-dependency-path: './front-project/pnpm-lock.yaml'
    
    - name: Install dependencies
      run: |
        if ! pnpm install --frozen-lockfile; then
          echo "❌ Frozen lockfile failed, regenerating lockfile..."
          pnpm install
        fi
    
    - name: Build application
      run: pnpm run build
      env:
        NODE_ENV: production
        VITE_API_URL: https://fakestoreapi.com
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.SERVER_PORT }} 
        script: |
          cd /var/www/project-web-app
          git pull origin main
          cd front-project
          # Installer pnpm sur le serveur si nécessaire
          if ! command -v pnpm &> /dev/null; then
            npm install -g pnpm
          fi
          pnpm install --frozen-lockfile
          NODE_ENV=production VITE_API_URL=https://fakestoreapi.com pnpm run build
          sudo systemctl reload nginx
          echo "✅ Déploiement terminé avec succès !"
          echo "L'application peut maintenant accéder à l'API FakeStore"
